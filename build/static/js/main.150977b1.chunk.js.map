{"version":3,"sources":["providers/StyleProvider.jsx","components/Header/index.jsx","components/Header/Title/index.jsx","components/Header/Body/index.jsx","components/Cards/Movie/Body/index.jsx","components/Cards/Movie/index.jsx","components/Cards/Movie/Title/index.jsx","components/Cards/Movie/Footer/index.jsx","components/Cards/Movie/Description/index.jsx","components/Lists/DecoratedList/Item/index.jsx","components/Lists/DecoratedList/index.jsx","components/Image/index.jsx","components/Form/CreateMovieForm.jsx","App.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","StyleProvider","_ref","children","React","createElement","Fragment","CssBaseline","Title","Body","style","inlineSize","HeaderBox","styled","Box","Header","props","Object","assign","alignContent","textAlign","Typography","component","variant","Movie","Card","sx","maxWidth","minWidth","title","subheader","CardHeader","CardContent","paddingTop","Grid","container","direction","Footer","movieId","onDelete","onClick","console","log","Description","item","Decorator","DecoratedList","Item","decorated","justifyContent","padding","concat","Image","space","layout","CreateMovieForm","setMovies","movieData","setMovieData","useState","director","releaseYear","contentRating","runTime","writers","actors","imageURL","description","handleClear","e","preventDefault","onSubmit","async","newMovie","id","uuidv4","axios","post","process","movies","backgroundColor","gap","margin","xs","TextField","size","label","fullWidth","value","onChange","target","arr","Button","type","App","useEffect","_response$data$Items","data","get","Items","map","movie","error","fetchMovies","handleDelete","response","delete","filter","spacing","length","_movie$directors","_movie$directors2","_movie$writers","_movie$writers2","_movie$actors","_movie$actors2","MovieCard","directors","index","writer","actor","src","width","render","document","querySelector"],"mappings":"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","file":"static/js/main.150977b1.chunk.js","sourcesContent":["import React from 'react';\nimport { CssBaseline } from \"@mui/material\";\nimport { createGlobalStyle } from \"styled-components\";\n\n/**\n * Feel free to add any global styling to this project by writing valid CSS in the code below.\n */\n\nconst GlobalStyle = createGlobalStyle`\n    html, body {\n        background-color: #192437;\n    }\n`;\n\nexport const StyleProvider = ({ children }) => {\n    return (\n        <>\n            <CssBaseline />\n            <GlobalStyle />\n            {children}\n        </>\n    );\n}","import React from 'react';\nimport { Typography, Box, styled } from '@mui/material';\nimport { Title as _Title } from './Title';\nimport { Body as _Body } from './Body';\n\nexport const Title = _Title;\nexport const Body = _Body;\n\nconst HeaderBox = styled(Box)`\n    margin-top: 3em;\n    padding: 1em;\n    background-color: #343F50;\n    border-radius: 50%;\n    /* color: #D0D7DB; */\n    color: #FFFFFF;\n`;\n\nconst Header = ({children, props}) => {\n    return (\n        !children ? null : \n        <HeaderBox alignContent=\"center\" textAlign=\"center\" {...props}>\n            <Typography component={'span'} variant='body2'>\n                {children}\n            </Typography>\n        </HeaderBox>\n    );\n};\n\nexport default Header;","import React from 'react';\nexport const Title = ({children}) => {\n    return (\n        <div>\n            <h2>{children}</h2>\n        </div>\n    );\n}","import React from 'react';\nexport const Body = ({children}) => {\n    return (\n        <div style={{inlineSize: '20vw'}}>\n            {children}\n        </div>\n    );\n}","import React from 'react';\nimport { Grid, CardContent } from '@mui/material';\n\nexport const Body = ({children, ...props}) => {\n    return (\n        <CardContent sx={{paddingTop: '0px'}} {...props}>\n            <Grid container direction=\"column\">\n                {children}\n            </Grid>\n        </CardContent>\n    );\n}","import React from 'react';\nimport { Card } from '@mui/material';\nimport { Title } from './Title';\nimport { Body } from './Body';\nimport { Footer } from './Footer';\nimport { Description } from './Description';\n\nconst Movie = ({children, ...props}) => {\n    return (\n        <Card sx={{maxWidth: '80vw', minWidth: '80vw'}} {...props}>\n            {children}\n        </Card>\n    );\n}\n\nMovie.Title = Title;\nMovie.Body = Body;\nMovie.Footer = Footer;\nMovie.Description = Description;\n\nexport { Movie };\nexport default Movie;","import React from 'react';\nimport { CardHeader } from '@mui/material';\n\nexport const Title = ({title, subheader, ...props}) => {\n    return (\n        <CardHeader title={title} subheader={subheader} {...props}/>\n    );\n}","import React from 'react';\n// export const Footer = () => {\n//     return (\n//         <></>\n//     );\n// }\n\nexport const Footer = ({movieId, onDelete}) => {\n    return (\n        <div>\n            <button onClick={() => {\n                console.log('Delete clicked for movie:', movieId);\n                onDelete(movieId)}}>Delete</button>\n        </div>\n    );\n}","import React from 'react';\nimport { Grid } from '@mui/material';\n\nexport const Description = ({children}) => {\n    return (\n        <Grid item>\n            {children}\n        </Grid>\n    );\n}","import React from 'react';\nimport { Grid } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Decorator = styled('div')`\n    display: inline-block;\n    content: '';\n    font-size: 1px;\n    line-height: .5rem;\n    padding: 1px;\n    border-radius: 50%;\n    vertical-align: 75%;\n    background-color: currentColor;\n    margin: 0px;\n`;\n\nexport const Item = ({children, decorated, ...props}) => {\n    return (\n        <Grid {...props} item>\n            <Grid container justifyContent=\"space-between\">\n                <Grid item>\n                    {!!decorated ? <Decorator/> : null}\n                </Grid>\n                <Grid item sx={{padding: `0px 5px 0px ${!!decorated ? '5px' : '0px'}`}}>\n                    {children}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport { Grid } from '@mui/material';\nimport { Item } from './Item';\n\nconst DecoratedList = ({children, ...props}) => {\n    return (\n        <Grid {...props} container>\n            {children}\n        </Grid>\n    );\n}\n\nDecoratedList.Item = Item;\n\nexport { DecoratedList };\nexport default DecoratedList;","import { styled } from \"@mui/material/styles\";\nimport { space, layout } from \"styled-system\";\n\nexport const Image = styled('img')`\n    ${space}\n    ${layout}\n`;","import React, { useState } from 'react';\nimport { Grid, Button, TextField } from '@mui/material';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const CreateMovieForm = ({setMovies}) => {\n\n    const [movieData, setMovieData] = useState({\n        title: '',\n        director: '',\n        releaseYear: '',\n        contentRating: '',\n        runTime: '',\n        writers: ['', '', ''],\n        actors: ['', '', ''],\n        imageURL: '',\n        description: ''\n    });\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const newMovie = {\n            id: uuidv4(),\n            ...movieData\n        }\n        console.log(movieData);\n        await axios.post(`${process.env.REACT_APP_GATEWAY_URI}/${process.env.REACT_APP_GATEWAY_RESOURCE}`, newMovie);\n        setMovies(movies => [...movies, newMovie]);\n        handleClear();\n    }\n\n    const handleClear = e => {\n        e.preventDefault();\n        setMovieData({\n            title: '',\n            director: '',\n            releaseYear: '',\n            contentRating: '',\n            runTime: '',\n            writers: ['', '', ''],\n            actors: ['', '', ''],\n            imageURL: '',\n            description: ''\n        });\n    }\n\n    return (\n        <form onSubmit={handleSubmit} style={{backgroundColor: 'light-gray'}}>\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    <h2>Create a Movie!</h2>\n                </Grid>\n            </Grid>\n            <Grid container gap={'15px'} sx={{margin: '20px 0px'}} justifyContent={\"space-between\"}>\n                <Grid item xs={6}>\n                    <TextField size=\"small\" label=\"Movie Title\" variant=\"filled\" fullWidth value={movieData.title} onChange={e => setMovieData({...movieData, title: e.target.value})}/>\n                </Grid>\n                <Grid item xs={5}>\n                    <TextField size=\"small\" label=\"Movie Director\" variant=\"filled\" fullWidth value={movieData.director} onChange={e => setMovieData({...movieData, director: e.target.value})}/>\n                </Grid>\n            </Grid>\n            <Grid container gap={'15px'} sx={{margin: '20px 0px'}}>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Release Year\" variant=\"filled\" value={movieData.releaseYear} onChange={e => setMovieData({...movieData, releaseYear: e.target.value})}/>\n                </Grid>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Run Time\" variant=\"filled\" value={movieData.runTime} onChange={e => setMovieData({...movieData, runTime: e.target.value})} />\n                </Grid>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Content Rating\" variant=\"filled\" value={movieData.contentRating} onChange={e => setMovieData({...movieData, contentRating: e.target.value})} />\n                </Grid>\n            </Grid>\n            <Grid container gap={'15px'} sx={{margin: '20px 0px'}}>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Actor 1\" variant=\"filled\" value={movieData.actors[0]} onChange={e => {const arr = movieData.actors; arr[0] = e.target.value; setMovieData({...movieData, actors: arr}) }} />\n                </Grid>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Actor 2\" variant=\"filled\" value={movieData.actors[1]} onChange={e => {const arr = movieData.actors; arr[1] = e.target.value; setMovieData({...movieData, actors: arr}) }} />\n                </Grid>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Actor 3\" variant=\"filled\" value={movieData.actors[2]} onChange={e => {const arr = movieData.actors; arr[2] = e.target.value; setMovieData({...movieData, actors: arr}) }} />\n                </Grid>\n            </Grid>\n            <Grid container gap={'15px'} sx={{margin: '20px 0px'}}>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Writer 1\" variant=\"filled\" value={movieData.writers[0]} onChange={e => {const arr = movieData.writers; arr[0] = e.target.value; setMovieData({...movieData, writers: arr}) }} />\n                </Grid>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Writer 2\" variant=\"filled\" value={movieData.writers[1]} onChange={e => {const arr = movieData.writers; arr[1] = e.target.value; setMovieData({...movieData, writers: arr}) }} />\n                </Grid>\n                <Grid item>\n                    <TextField size=\"small\" label=\"Writer 3\" variant=\"filled\" value={movieData.writers[2]} onChange={e => {const arr = movieData.writers; arr[2] = e.target.value; setMovieData({...movieData, writers: arr}) }} />\n                </Grid>\n            </Grid>\n            <Grid container gap={'15px'} sx={{margin: '20px 0px'}}>\n                <Grid item xs={12}>\n                    <TextField size=\"small\" label=\"Image URL\" variant=\"filled\" fullWidth value={movieData.imageURL} onChange={e => setMovieData({...movieData, imageURL: e.target.value})} />\n                </Grid>\n            </Grid>\n            <Grid container gap={'15px'} sx={{margin: '20px 0px'}}>\n                <Grid item xs={12}>\n                    <TextField size=\"small\" label=\"Description\" variant=\"filled\" fullWidth value={movieData.description} onChange={e => setMovieData({...movieData, description: e.target.value})} />\n                </Grid>\n            </Grid>\n            <Grid container justifyContent=\"space-between\">\n                <Grid item xs={4}>\n                    <Button variant=\"outlined\" type=\"button\" onClick={handleClear} fullWidth>Clear</Button>\n                </Grid>\n                <Grid item xs={4}>\n                    <Button variant=\"outlined\" type=\"submit\" fullWidth>Submit</Button>\n                </Grid>\n            </Grid>\n            \n        </form>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { Card, Grid, Typography } from '@mui/material';\nimport Header, { Title, Body } from './components/Header';\nimport { Movie as MovieCard } from './components/Cards';\nimport { DecoratedList } from './components/Lists';\nimport { Image } from './components/Image';\nimport { CreateMovieForm } from './components/Form';\n// import movies from './utils/movies.example';\nimport axios from 'axios';\n\nexport const App = () => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try { \n                const response = await axios.get(`${process.env.REACT_APP_GATEWAY_URI}/${process.env.REACT_APP_GATEWAY_RESOURCE}`);\n                    \n                const data = response.data.Items ?? []; \n    \n                // Include movie IDs in state update\n                setMovies(data.map(movie => ({ \n                    id: movie.id, // Extract ID from DynamoDB\n                    ...movie // Spread the rest of the movie data\n                })));\n            } catch (error) {\n                console.error(\"Error fetching movies:\", error);\n            } \n        }\n    \n        fetchMovies(); \n    }, []);\n\n    // Handle Movie Deletion\n    const handleDelete = async (movieId) => {\n        console.log(\"handleDelete initiated with movie ID:\", movieId);\n        try {\n            console.log(\"API Endpoint to Delete:\", `${process.env.REACT_APP_GATEWAY_URI}/${process.env.REACT_APP_GATEWAY_RESOURCE}/${movieId}`); \n            const response = await axios.delete(`${process.env.REACT_APP_GATEWAY_URI}/${process.env.REACT_APP_GATEWAY_RESOURCE}/${movieId}`); \n            console.log(\"API Response:\", response);\n    \n            setMovies(movies.filter(movie => movie.id !== movieId));\n        } catch (error) {\n            console.error('Error deleting movie:', error);\n            console.error(\"Error Response:\", error.response); // Log details from the 'error.response' object\n        }\n    }\n\n    return (\n        <>\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    {/* Please change the header title or body text to whatever you wish */}\n                    <Header>\n                        <Title>SkillStorm Movies</Title>\n                        <Body>Movies delivered to you through the power of serverless computing!</Body>\n                    </Header>\n                </Grid>\n            </Grid>\n            <Grid container justifyContent=\"center\" sx={{margin: \"30px 0px\"}}>\n                <Grid item>\n                    <Card sx={{padding: '20px'}}>\n                        <CreateMovieForm setMovies={setMovies}/>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid container justifyContent=\"center\" spacing={2} sx={{padding: '5em 0'}}>\n                {\n                movies?.length > 0 \n                ? movies?.map((movie) => {\n                    return (\n                        <Grid item>\n                            <MovieCard>\n                                    <MovieCard.Title \n                                        title={movie.title || ''}\n                                        subheader={\n                                            <DecoratedList>\n                                                {!!movie.releaseYear ? <DecoratedList.Item>{movie.releaseYear}</DecoratedList.Item> : null }\n                                                {!!movie.contentRating ? <DecoratedList.Item decorated>{movie.contentRating}</DecoratedList.Item> : null}\n                                                {!!movie.runTime ? <DecoratedList.Item decorated>{movie.runTime}</DecoratedList.Item> : null}\n                                            </DecoratedList>\n                                        }\n                                    />\n                                    <MovieCard.Body>\n                                        <Grid container>\n                                            <Grid item xs={10} sx={{padding: '0px 5px 0px 0px'}}>\n                                                <Grid container direction=\"column\" spacing=\"1em\">\n                                                    <MovieCard.Description>\n                                                        <Typography>\n                                                            {movie.description || ''}\n                                                        </Typography>\n                                                    </MovieCard.Description>\n                                                    <MovieCard.Description>\n                                                        <hr/>\n                                                        <DecoratedList>\n                                                            <DecoratedList.Item><strong>{movie?.directors?.length > 1 || typeof movie.director != 'string' ? 'Directors' : 'Director'}</strong></DecoratedList.Item>\n                                                            {typeof movie.director == 'string' ? \n                                                                <DecoratedList.Item>{movie.director}</DecoratedList.Item> : \n                                                            movie?.directors?.map((director, index) => {\n                                                                return (\n                                                                    <DecoratedList.Item decorated={index !== 0}>{director}</DecoratedList.Item>\n                                                                );\n                                                            })}\n                                                        </DecoratedList>\n                                                    </MovieCard.Description>\n                                                    <MovieCard.Description>\n                                                        <hr/>\n                                                        <DecoratedList>\n                                                            <DecoratedList.Item><strong>{movie?.writers?.length > 1 ? 'Writers' : 'Writer'}</strong></DecoratedList.Item>\n                                                            {movie?.writers?.map((writer, index) => {\n                                                                return (\n                                                                    movie?.writers[index] ? <DecoratedList.Item decorated={index !== 0}>{writer}</DecoratedList.Item> : null\n                                                                );\n                                                            })}\n                                                        </DecoratedList>\n                                                    </MovieCard.Description>\n                                                    <MovieCard.Description>\n                                                        <hr/>\n                                                        <DecoratedList>\n                                                            <DecoratedList.Item><strong>{movie?.actors?.length > 1 ? 'Actors' : 'Actor'}</strong></DecoratedList.Item>\n                                                            {movie?.actors?.map((actor, index) => {\n                                                                return (\n                                                                    <DecoratedList.Item decorated={index !== 0}>{actor}</DecoratedList.Item>\n                                                                );\n                                                            })}\n                                                        </DecoratedList>\n                                                    </MovieCard.Description>\n                                                </Grid>\n                                            </Grid>\n                                            {!!movie.imageURL ? \n                                            <Grid item xs={2}>\n                                                <Image src={movie.imageURL} width=\"100%\"/>\n                                            </Grid> :\n                                            null}\n                                        </Grid>\n                                    </MovieCard.Body>\n                                <MovieCard.Footer movieId={movie.id} onDelete={handleDelete} />\n                            </MovieCard>\n                        </Grid>\n                    );\n                })\n                : <MovieCard>\n                    <Grid container justifyContent=\"center\" textAlign=\"center\">\n                        <Grid item sx={{padding: '24px 5px 0px 0px'}}>\n                            <MovieCard.Body>\n                                <MovieCard.Description>\n                                    <Typography sx={{maxWidth: '42vw', minWidth: '42vw'}}>\n                                        Your DynamoDB table is currently empty! If you'd like to add a movie, ensure that your Lambdas and API Gateway have been properly configured and their respective endpoints have been added to the .env file. Once you've done that, use the form below to add any movies to your DynamoDB table!\n                                    </Typography>\n                                </MovieCard.Description>\n                            </MovieCard.Body>\n                        </Grid>\n                    </Grid>\n                </MovieCard>}\n            </Grid>\n        </>\n    );\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport { StyleProvider } from './providers/StyleProvider';\nimport { App } from './App';\n\nrender(\n    <StyleProvider>\n        <App />\n    </StyleProvider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}